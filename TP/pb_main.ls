/PROG  PB_MAIN
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 11373;
CREATE		= DATE 17-05-30  TIME 11:08:22;
MODIFIED	= DATE 18-08-17  TIME 11:28:20;
FILE_NAME	= MAIN;
VERSION		= 0;
LINE_COUNT	= 580;
MEMORY_SIZE	= 12265;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= *,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
  ARC : TRUE ; 
  ARC Welding Equipment : 1,1,*,*,*;

MPAS ;
MPAS_NUM_PASSES        : 0;
MPAS_LAST_PASS         : 0;
MPAS_CURRENT_PASS      : 0;
MPAS_STATUS_PASS       : 0;
/MN
   1:  JMP LBL[555] ;
   2:  R[151]=0    ;
   3:  R[153]=0    ;
   4:  LBL[555] ;
   5:   ;
   6:  !Robot distance ;
   7:  R[93]=50.1    ;
   8:  !Welding parametersM ;
   9:  WAIT R[109]=0    ;
  10:  R[13]=6    ;
  11:  R[115]=1    ;
  12:  R[116]=4    ;
  13:  CALL WELD_PA    ;
  14:   ;
  :! rat holes; 
  : if R[71]=55, jmp lbl[1];
    : if R[71]=56, jmp lbl[1];
  15:  !-- AT RESUME JMP TO LABEL 2 ;
  16:  IF ((R[71]>0)),JMP LBL[2] ;
  17:  !Resetting registers ;
  18:  LBL[9] ;
  19:  OVERRIDE=100% ;
  20:  R[151]=0    ;
  21:  R[153]=0    ;
  22:  R[69]=0    ;
  23:  R[70]=0    ;
  24:  R[71]=15    ;
  25:  R[75]=0    ;
  26:  R[113]=0    ;
  27:   ;
  28:  !Main Loop ;
  29:  LBL[1] ;
  30:  R[157]=0    ;
  31:  R[1]=TIMER[2]    ;
  32:  TIMER[2]=RESET ;
  33:  TIMER[2]=START ;
  34:  WAIT DO[101]=OFF    ;
  35:  WAIT DO[103]=OFF    ;
  36:  CALL WELDPERF    ;
  37:  TIMER[2]=STOP ;
  38:   ;
  39:  LBL[2] ;
  40:   ;
  41:  !****************************** ;
  42:  ! X-profiles if robots swapped ;
  43:  !****************************** ;
  44:  IF (R[70]=15) THEN ;
  45:  R[75]=0    ;
  46:   ;
  47:  !-- AT RESUME JMP TO LABEL ;
  48:  IF ((R[157]>0)),JMP LBL[R[157]] ;
  49:   ;
  50:  ! fold both robots: ;
  51:  LBL[101] ;
  52:  R[157]=101    ;
  53:  RUN FOLD1 ;
  54:  WAIT   1.00(sec) ;
  55:  CALL FOLD3    ;
  56:  WAIT DO[101]=OFF    ;
  57:  WAIT DO[103]=OFF    ;
  58:   ;
  59:  !Move gantry ;
  60:  LBL[120] ;
  61:  R[157]=120    ;
  62:  CALL PB_MOVE2    ;
  63:   ;
  64:  ! unfold both robots: ;
  65:  LBL[125] ;
  66:  R[157]=125    ;
  67:  RUN UNFOLD1 ;
  68:  WAIT   1.00(sec) ;
  69:   ;
  70:  CALL UNFOLD3    ;
  71:   ;
  72:  WAIT DO[101]=OFF    ;
  73:  WAIT DO[103]=OFF    ;
  74:   ;
  75:  ! Sense R1 ;
  76:  IF ((R[291]=1) OR R[291]=4) THEN ;
  77:  LBL[131] ;
  78:  R[157]=131    ;
  79:  CALL ALPT3    ;
  80:  CALL PB_MID1    ;
  81:  R[158]=0    ;
  82:  ELSE ;
  83:  R[158]=(-2)    ;
  84:  ENDIF ;
  85:   ;
  86:  ! Sense R3 ;
  87:  IF ((R[291]=3) OR R[291]=4) THEN ;
  88:  LBL[133] ;
  89:  R[157]=133    ;
  90:  CALL ALPT3    ;
  91:  CALL PB_MID3    ;
  92:  R[159]=0    ;
  93:  ELSE ;
  94:  R[159]=(-2)    ;
  95:  ENDIF ;
  96:   ;
  97:  !reset swap back ;
  98:  R[290]=0    ;
  99:  ENDIF ;
 100:   ;
 101:  !****************************** ;
 102:  !Move to start R1 ;
 103:  !****************************** ;
 104:  IF (R[70]=20) THEN ;
 105:  R[75]=0    ;
 106:   ;
 107:  CALL PB_END1    ;
 108:  ENDIF ;
 109:   ;
 110:  !****************************** ;
 111:  !Start welding R1 + R3 ;
 112:  !****************************** ;
 113:  IF (R[70]=21) THEN ;
 114:   ;
 115:  R[158]=2    ;
 116:  R[159]=2    ;
 117:  !skip arc start if  starting is a ;
 118:  //IF (R[136]=0) THEN ;
 119:  R[113]=1    ;
 120:  CALL ARCSET1    ;
 121:  RUN PB_END1 ;
 124:   ;
 125:  CALL PB_END3    ;
 126:   ;
 127:  WAIT R[75]=3    ;
 128:  WAIT DO[101]=OFF    ;
 129:  WAIT DO[103]=OFF    ;
 130:  ENDIF ;
 131:  //ENDIF ;
 132:  !****************************** ;
 133:  !Start welding R1 without R3 ;
 134:  !****************************** ;
 135:  IF (R[70]=22) THEN ;
 136:  R[158]=2    ;
 137:  R[113]=1    ;
 138:  R[75]=3    ;
 139:  CALL ARCSET1    ;
 140:  CALL PB_END1    ;
 141:  ENDIF ;
 142:   ;
 143:  !****************************** ;
 144:  !Start welding R3 without R1 ;
 145:  !****************************** ;
 146:  IF (R[70]=23) THEN ;
 147:  R[159]=2    ;
 148:  CALL PB_END3    ;
 149:  ENDIF ;
 150:   ;
 151:  !****************************** ;
 152:  !Sync welding ;
 153:  !****************************** ;
 154:  IF (R[70]=40) THEN ;
 155:  R[115]=1    ;
 156:   ;
 157:  CALL PB_SYNC    ;
 158:  ENDIF ;
 159:   ;
 160:  !****************************** ;
 161:  !Sync move off ;
 162:  !****************************** ;
 163:  IF (R[70]=42) THEN ;
 164:  R[163]=1    ;
 165:  CALL X_MOVE    ;
 166:   ;
 167:  CALL PF_SYNC    ;
 168:   ;
 169:  ENDIF ;
 170:   ;
 171:  !Synk ;
 172:  IF (R[70]=45) THEN ;
 173:  CALL PB_SYNC_OFF    ;
 174:   ;
 175:  ENDIF ;
 176:   ;
 177:  !****************************** ;
 178:  !Jump profil ;
 179:  !****************************** ;
 180:  IF (R[70]=51) THEN ;
 181:   ;
 182:   ;
 183:  ! Start Offset ;
 184:  R[465]=150    ;
 185:  !-------------------------------- ;
 186:  !Move ahead until jump ;
 187:  !-------------------------------- ;
 188:  IF (((R[158]=2) AND (R[159]=2)) OR R[73]=21)) THEN ;
 189:  CALL PB_SYNC    ;
 190:  R[73]=0    ;
 191:  !go to fold step ;
 192:  ENDIF ;
 193:   ;
 194:  !-------------------------------- ;
 195:  !Robot 1 folds ;
 196:  !-------------------------------- ;
 197:  IF (R[158]=(-1)) THEN ;
 198:  LBL[11] ;
 199:   ;
 200:  ! weld R3 ;
 201:  IF (R[159]=2) THEN ;
 202:  R[113]=1    ;
 203:  CALL ARCSET3    ;
 204:  RUN PB_SINGLE3 ;
 205:  ENDIF ;
 206:   ;
 207:  R[163]=0    ;
 208:  CALL FOLD1    ;
 209:  WAIT    .50(sec) ;
 210:  R[158]=(-2)    ;
 211:  R[163]=0    ;
 212:  WAIT DO[101]=OFF    ;
 213:  WAIT DO[103]=OFF    ;
 214:   ;
 215:  !go to single weld step or sync m ;
 216:  ENDIF ;
 217:  !-------------------------------- ;
 218:  !Robot 3 folds ;
 219:  !-------------------------------- ;
 220:  IF (R[159]=(-1)) THEN ;
 221:  LBL[13] ;
 222:   ;
 223:  ! weld R1 ;
 224:  IF (R[158]=2) THEN ;
 225:  R[113]=1    ;
 226:  CALL ARCSET1    ;
 227:  RUN PB_SINGLE1 ;
 228:  ENDIF ;
 229:   ;
 230:  R[164]=0    ;
 231:  CALL FOLD3    ;
 232:  WAIT    .50(sec) ;
 233:  R[159]=(-2)    ;
 234:  R[164]=0    ;
 235:  WAIT DO[101]=OFF    ;
 236:  WAIT DO[103]=OFF    ;
 237:   ;
 238:  !go to single weld step or sync m ;
 239:  ENDIF ;
 240:  !-------------------------------- ;
 241:  !Sync move without weld ;
 242:  !-------------------------------- ;
 243:  IF ((R[158]=(-2)) AND (R[159]=(-2))) THEN ;
 244:  IF (R[81]=1) THEN ;
 245:  CALL PB_MOVE2    ;
 246:  ELSE ;
 247:  CALL PB_MOVE13    ;
 248:  ENDIF ;
 249:  ENDIF ;
 250:   ;
 251:  !-------------------------------- ;
 252:  !Robot 1 welds single ;
 253:  !-------------------------------- ;
 254:  !welds until R3 folds down or R1 ;
 255:  IF ((R[158]=2) AND (R[159]=(-2))) THEN ;
 256:  !Reduced start offset ;
 257:  IF (R[81]=1) THEN ;
 258:  IF (R[82]=(-1)),R[465]=(-50) ;
 259:  IF (R[82]=1),R[465]=150 ;
 260:  ELSE ;
 261:  R[465]=150    ;
 262:  ENDIF ;
 263:   ;
 264:  !-- AT RESUME JMP TO LABEL ;
 265:  IF ((R[157]>0)),JMP LBL[R[157]] ;
 266:  R[113]=1    ;
 267:  CALL ARCSET1    ;
 268:   ;
 269:  ! If Y-profile ;
 270:  IF (R[81]=2) THEN ;
 271:  RUN PB_SINGLE12 ;
 272:  CALL PB_MOVE3    ;
 273:  WAIT    .50(sec) ;
 274:  IF (R[470]=3) THEN ;
 275:  WAIT R[113]=0    ;
 276:  ENDIF ;
 277:  ELSE ;
 278:  CALL PB_SINGLE12    ;
 279:  ENDIF ;
 280:   ;
 281:  !Take off weld, if finished ;
 282:  IF (R[113]=0) THEN ;
 283:  LBL[110] ;
 284:  R[157]=110    ;
 285:  WAIT DO[101]=OFF    ;
 286:  CALL ARCSET1    ;
 287:  R[71]=999    ;
 288:  ENDIF ;
 289:   ;
 290:  WAIT DO[101]=OFF    ;
 291:  WAIT DO[103]=OFF    ;
 292:   ;
 293:  R[113]=0    ;
 294:  CALL ARCSET1    ;
 295:   ;
 296:  ! Perhaps fold R1 ;
 297:  IF (R[158]=(-1)),JMP LBL[11] ;
 298:  ENDIF ;
 299:   ;
 300:  !-------------------------------- ;
 301:  !Robot 3 welds single ;
 302:  !-------------------------------- ;
 303:  !welds until R1 folds down or R3 ;
 304:  IF ((R[158]=(-2)) AND (R[159]=2)) THEN ;
 305:  !Reduced start offset ;
 306:  IF (R[81]=1) THEN ;
 307:  IF (R[82]=1),R[465]=(-50) ;
 308:  IF (R[82]=(-1)),R[465]=150 ;
 309:  ELSE ;
 310:  R[465]=150    ;
 311:  ENDIF ;
 312:   ;
 313:  !-- AT RESUME JMP TO LABEL ;
 314:  IF ((R[157]>0)),JMP LBL[R[157]] ;
 315:   ;
 316:  R[113]=1    ;
 317:  CALL ARCSET3    ;
 318:   ;
 319:  ! If Y-profile ;
 320:  IF (R[81]=2) THEN ;
 321:  RUN PB_SINGLE32 ;
 322:  CALL PB_MOVE1    ;
 323:  WAIT    .50(sec) ;
 324:  IF (R[470]=1) THEN ;
 325:  WAIT R[113]=0    ;
 326:  ENDIF ;
 327:  ELSE ;
 328:  CALL PB_SINGLE32    ;
 329:  ENDIF ;
 330:   ;
 331:  !Take off weld, if finished ;
 332:  IF (R[113]=0) THEN ;
 333:  LBL[130] ;
 334:  R[157]=130    ;
 335:  WAIT DO[103]=OFF    ;
 336:  CALL ARCSET3    ;
 337:  R[71]=999    ;
 338:  ENDIF ;
 339:   ;
 340:  WAIT DO[101]=OFF    ;
 341:  WAIT DO[103]=OFF    ;
 342:   ;
 343:  R[113]=0    ;
 344:  CALL ARCSET3    ;
 345:   ;
 346:  ! Perhaps fold R3 ;
 347:  IF (R[159]=(-1)),JMP LBL[13] ;
 348:  ENDIF ;
 349:  !-------------------------------- ;
 350:  !Robot 1 unfolds + arcON ;
 351:  !-------------------------------- ;
 352:  IF (R[158]=(1)) THEN ;
 353:  R[113]=0    ;
 354:  !-- AT RESUME JMP TO LABEL ;
 355:  IF ((R[157]>0)),JMP LBL[R[157]] ;
 356:   ;
 357:  ! weld R3 ;
 358:  IF (R[159]=2) THEN ;
 359:  R[113]=1    ;
 360:  CALL ARCSET3    ;
 361:  RUN PB_SINGLE3 ;
 362:  !stop when R3 is ready, skip R[15 ;
 363:  ENDIF ;
 364:   ;
 365:   ;
 366:  LBL[31] ;
 367:  R[157]=31    ;
 368:  CALL UNFOLD1    ;
 369:  R[163]=1    ;
 370:   ;
 371:  LBL[32] ;
 372:  R[157]=32    ;
 373:  !sensing ;
 374:  CALL ALPT3    ;
 375:   ;
 376:  LBL[33] ;
 377:  R[157]=33    ;
 378:  !move to start pos ;
 379:  CALL PB_MID1    ;
 380:   ;
 381:  LBL[34] ;
 382:  R[157]=34    ;
 383:  ! weld R3 again ;
 384:  IF ((R[159]=2) AND (R[113]=0)) THEN ;
 385:  R[113]=1    ;
 386:  CALL ARCSET3    ;
 387:  RUN PB_SINGLE3 ;
 388:  !stop when R3 is ready, skip R[15 ;
 389:  ENDIF ;
 390:  ! wait for R3? ;
 391:  IF (R[159]=2) THEN ;
 392:  WAIT R[468]<R[93]    ;
 393:  R[158]=0    ;
 394:  ELSE ;
 395:  R[158]=0    ;
 396:  ENDIF ;
 397:   ;
 398:  WAIT DO[101]=OFF    ;
 399:  WAIT DO[103]=OFF    ;
 400:  R[157]=0    ;
 401:  ENDIF ;
 402:   ;
 403:  !-------------------------------- ;
 404:  !Robot 3 unfolds + arcON ;
 405:  !-------------------------------- ;
 406:  IF (R[159]=(1)) THEN ;
 407:  R[113]=0    ;
 408:  !-- AT RESUME JMP TO LABEL ;
 409:  IF ((R[157]>0)),JMP LBL[R[157]] ;
 410:   ;
 411:  ! weld R1 ;
 412:  IF (R[158]=2) THEN ;
 413:  R[113]=1    ;
 414:  CALL ARCSET1    ;
 415:  RUN PB_SINGLE1 ;
 416:  !stop when R3 is ready, skip R[15 ;
 417:  ENDIF ;
 418:   ;
 419:   ;
 420:  LBL[41] ;
 421:  R[157]=41    ;
 422:  CALL UNFOLD3    ;
 423:  R[164]=1    ;
 424:   ;
 425:  LBL[42] ;
 426:  R[157]=42    ;
 427:  !sensing ;
 428:  CALL ALPT3    ;
 429:   ;
 430:  LBL[43] ;
 431:  R[157]=43    ;
 432:  !move to start pos ;
 433:  CALL PB_MID3    ;
 434:   ;
 435:  LBL[44] ;
 436:  R[157]=44    ;
 437:  ! weld R1 ;
 438:  IF ((R[158]=2) AND (R[113]=0)) THEN ;
 439:  R[113]=1    ;
 440:  CALL ARCSET1    ;
 441:  RUN PB_SINGLE1 ;
 442:  !stop when R3 is ready, skip R[15 ;
 443:  ENDIF ;
 444:   ;
 445:  ! wait for R1? ;
 446:  IF (R[158]=2) THEN ;
 447:  WAIT R[468]>R[93]    ;
 448:  R[159]=0    ;
 449:  ELSE ;
 450:  R[159]=0    ;
 451:  ENDIF ;
 452:   ;
 453:  R[159]=0    ;
 454:  WAIT DO[101]=OFF    ;
 455:  WAIT DO[103]=OFF    ;
 456:   ;
 457:  R[157]=0    ;
 458:  ENDIF ;
 459:   ;
 460:  ENDIF ;
 461:   ;
 462:  !R3 catch up ;
 463:  !****************************** ;
 464:  IF (R[70]=52) THEN ;
 465:  R[75]=0    ;
 466:  CALL ARCSET13    ;
 467:  CALL PB_SINGLE3    ;
 468:  R[113]=0    ;
 469:  CALL ARCSET3    ;
 470:  ENDIF ;
 471:  !****************************** ;
 472:  !Robot 1  starting up ;
 473:  !****************************** ;
 474:  IF (R[70]=53) THEN ;
 475:  R[75]=0    ;
 476:  R[163]=1    ;
 477:  R[113]=1    ;
 478:  CALL ARCSET1    ;
 479:  RUN PB_SINGLE1 ;
 480:  WAIT R[75]=1    ;
 481:   ;
 482:  R[75]=R[75]+3    ;
 483:  WAIT DO[101]=OFF    ;
 484:  WAIT DO[103]=OFF    ;
 485:  ENDIF ;
 486:   ;
 487:  !R1 Move up, no weld ;
 488:  !****************************** ;
 489:  IF (R[70]=54) THEN ;
 490:  R[75]=0    ;
 491:  R[163]=1    ;
 492:  R[164]=1    ;
 493:  R[113]=0    ;
 494:  CALL ARCSET1    ;
 495:  CALL PB_OFF_1    ;
 496:  ENDIF ;
 497:   ;
 498:  !Rat holes ;
 499:  !****************************** ;
 500:  IF (R[70]=55) THEN ;
 501:  !-- AT RESUME JMP TO LABEL ;
 502:  IF ((R[157]>0)),JMP LBL[R[157]] ;
 503:   ;
 :! take of arc; 
  493:  R[113]=0    ;
 494:  CALL ARCSET1    ;
  494:  CALL ARCSET3    ;
  :;
 505:  !Sensing ;
 506:  CALL ALPT_RAT    ;
 507:   ;
 508:  !Welding 1 edge ;
 509:  R[95]=(1)    ;
 510:   ;
 511:   ;
 512:  LBL[51] ;
 513:  R[157]=51    ;
 514:  !Setting edgetype ;
 515:  R[254]=(3) ;
 516:  !CALL PB_END1    ;
 517:   ;
 518:  LBL[52] ;
 519:  R[157]=52    ;
 520:  !Setting edgetype ;
 521:  R[264]=(3) ;
 522:  CALL PB_END3    ;
 :R[153]=0   ;
 523:   ;
 524:  !Welding 2 edge ;
 525:  !setting to start ;
 526:  R[95]=(-1)    ;
 527:  R[288]=1    ;
 528:  !using prevois steps from step 20 ;
 529:  ENDIF ;
 530:   ;
 531:  !Store end point ;
 532:  IF (R[70]=999) THEN ;
 533:  LBL[999] ;
 534:   ;
 535:  !-- AT RESUME JMP TO LABEL ;
 536:  IF ((R[157]>0)),JMP LBL[R[157]] ;
 537:   ;
 538:  CALL ARCOFF13    ;
 539:   ;
 540:  LBL[91] ;
 541:  R[157]=91    ;
 542:   ;
 543:  ! move gantry+robots if needed ;
 544:  IF ((R[295]=1)) THEN ;
 545:  CALL FOLD3    ;
 546:  ENDIF ;
 547:   ;
 548:  IF ((R[295]=3)) THEN ;
 549:  CALL FOLD1    ;
 550:  ENDIF ;
 551:   ;
 552:  IF ((R[165]=1)) THEN ;
 553:  CALL PB_MOVE123    ;
 554:  ENDIF ;
 555:   ;
 556:  LBL[92] ;
 557:  R[157]=92    ;
 558:   ;
 559:  !unfolds if needed ;
 560:  R[134]=$SCR_GRP[1].$MCH_ang[5] ;
 566:  IF (R[163]<>1) THEN ;
 562:  CALL UNFOLD1    ;
 563:  ENDIF ;
 564:   ;
 565:  R[134]=$SCR_GRP[3].$MCH_ang[5] ;
 566:  IF (R[164]<>1) THEN ;
 567:  CALL UNFOLD3    ;
 568:  ENDIF ;
 569:   ;
 570:  WAIT DO[101]=OFF    ;
 571:  WAIT DO[103]=OFF    ;
 572:   ;
 573:  ABORT ;
 574:  ENDIF ;
 575:   ;
 576:  IF R[70]<>999,JMP LBL[1] ;
 577:  R[163]=0    ;
 578:  R[151]=0    ;
 579:  R[153]=0    ;
 580:  R[75]=0    ;
/POS
/END
